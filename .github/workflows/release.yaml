name: Release
on:
  push:
    tags:
      - '*'

permissions:
  contents: write
  packages: write

env:
  registry: ghcr.io
  name: openfaas-loki

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [amd64, arm64, ppc64le]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          distribution: goreleaser
          version: latest
          args: build --rm-dist --single-target
        env:
          GOARCH: ${{ matrix.platform }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Binary file parsing
        id: artifacts
        run: |
          cat dist/artifacts.json
          artifact_path=$(cat dist/artifacts.json | jq -r '.[0].path')
          echo ${articact_path#$(pwd)/}
          echo ::set-output name=artifact_path::$(echo ${articact_path#$(pwd)/})
      - name: Get metadata
        id: metadata
        uses: contiamo/git-metadata-action@main

      - name: Get Repo Owner
        id: get_repo_owner
        run: >
          echo ::set-output name=repo_owner::$(echo ${{ github.repository_owner }} |
          tr '[:upper:]' '[:lower:]')

      - name: Semver 2
        id: semver
        # remove optional v prefix
        run: >
          echo ::set-output name=value::$(echo ${{ github.ref }} | sed -E 's/.*v?([0-9]+\.[0-9]+\.[0-9]+).*/\1/')

      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v3
        with:
          images: ghcr.io/${{ steps.get_repo_owner.outputs.repo_owner }}/${{ env.name }}
          # generate Docker tags based on the following events/attributes
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Login to Docker Registry
        uses: docker/login-action@v1
        with:
          username: ${{ steps.get_repo_owner.outputs.repo_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ${{ env.registry }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Push container
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          outputs: "type=registry,push=true"
          platforms: linux/${{ matrix.platform }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          tags: |
            ${{ env.registry }}/${{ steps.get_repo_owner.outputs.repo_owner }}/${{ env.name}}:${{ steps.metadata.outputs.semver }}
            ${{ env.registry }}/${{ steps.get_repo_owner.outputs.repo_owner }}/${{ env.name}}:latest
          build-args: 'TARGETPATH=${{ steps.artifacts.artifact_path }}'
  release:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Get metadata
        id: metadata
        uses: contiamo/git-metadata-action@main

      - name: Semver 2
        id: semver
        # remove optional v prefix
        run: >
          echo ::set-output name=value::$(echo ${{ github.ref }} | sed -E 's/.*v?([0-9]+\.[0-9]+\.[0-9]+).*/\1/')
      - name: Set up Helm
        uses: azure/setup-helm@v1

      - name: Helm Package
        # make sure to use the semver output set for the version, helm does not want a "v" prefix
        run: helm package charts/openfaas-loki --version=${{ steps.semver.outputs.value }} --app-version=${{ steps.metadata.outputs.semver }} 
      
      - name: upload artifacts
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          files: |
            openfaas-loki-${{ steps.semver.outputs.value }}.tgz 

      - name: Publish Helm charts
        uses: stefanprodan/helm-gh-pages@master
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
